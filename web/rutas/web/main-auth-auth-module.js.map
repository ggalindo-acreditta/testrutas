{"version":3,"sources":["./src/app/guards/email-confirmation.guard.ts","./src/app/main/auth/auth.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACwD;AAEpC;AAGG;AACqB;AACxD;AAM/B;IAEI,gCACY,MAAc,EACd,IAAgB,EACjB,iBAAoC,EACnC,sBAA6C;QAH7C,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAY;QACjB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACnC,2BAAsB,GAAtB,sBAAsB,CAAuB;IACtD,CAAC;IAEJ,4CAAW,GAAX,UAAY,IAA4B,EAAE,KAA0B;QAChE,IAAI,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;YACxC,OAAO,IAAI;SACd;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACrC,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;;gBAbmB,sDAAM;gBACR,+DAAU;gBACE,+EAAiB;gBACX,oGAAqB;;IANhD,sBAAsB;QAJlC,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;yCAKsB,sDAAM;YACR,+DAAU;YACE,+EAAiB;YACX,oGAAqB;OANhD,sBAAsB,CAiBlC;IAAD,6BAAC;CAAA;AAjBkC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdM;AACM;AAE8B;AAE7E,IAAM,MAAM,GAAG;IACX;QACI,IAAI,EAAE,OAAO;QACb,YAAY,EAAE,8CAA8C;KAC/D;IACD;QACI,IAAI,EAAE,UAAU;QAChB,YAAY,EAAE,uDAAuD;KACxE;IACD;QACI,IAAI,EAAE,gBAAgB;QACtB,YAAY,EAAE,6FAA6F;KAC9G;IACD;QACI,IAAI,EAAE,SAAS;QACf,YAAY,EAAE,oFAAoF;QAClG,WAAW,EAAE,CAAC,0FAAsB,CAAC;KACxC;CACJ,CAAC;AASF;IAAA;IAEA,CAAC;IAFY,UAAU;QAPtB,8DAAQ,CAAC;YACN,YAAY,EAAE,EAAE;YAChB,OAAO,EAAO;gBACV,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAChC;SACJ,CAAC;OAEW,UAAU,CAEtB;IAAD,iBAAC;CAAA;AAFsB","file":"main-auth-auth-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AuthService } from '../main/auth/auth.service';\r\nimport { fuseConfig } from '../fuse-config';\r\nimport { FuseConfigService } from '@fuse/services/config.service';\r\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class EmailConfirmationGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpClient,\r\n        public fuseConfigService: FuseConfigService,\r\n        private _fuseNavigationService: FuseNavigationService\r\n    ) {}\r\n    \r\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\r\n        if (sessionStorage.getItem('SIGNUP-EMAIL')) {\r\n            return true\r\n        } else {\r\n            this.router.navigate(['auth/login']);\r\n            return false;\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { EmailConfirmationGuard } from 'app/guards/email-confirmation.guard';\r\n\r\nconst routes = [\r\n    {\r\n        path: 'login',\r\n        loadChildren: 'app/main/auth/login/login.module#LoginModule'\r\n    },\r\n    { // Maybe aquí serán 2 sign ups, uno para lider y otro para invitado\r\n        path: 'register',\r\n        loadChildren: 'app/main/auth/register/register.module#RegisterModule',\r\n    },\r\n    {\r\n        path: 'register_guest',\r\n        loadChildren: 'app/main/auth/collaborator-register/collaborator-register.module#CollaboratorRegisterModule'\r\n    },\r\n    {\r\n        path: 'confirm',\r\n        loadChildren: 'app/main/auth/email-confirmation/email-confirmation.module#EmailConfirmationModule',\r\n        canActivate: [EmailConfirmationGuard]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports     : [\r\n        RouterModule.forChild(routes)\r\n    ]\r\n})\r\n\r\nexport class AuthModule\r\n{\r\n}"],"sourceRoot":"webpack:///"}